{"pages":[{"title":"关于","text":"关于我一个 Python 程序员👨‍💻‍","link":"/about/index.html"},{"title":"标签","text":"","link":"/tags/index.html"}],"posts":[{"title":"CentOS 6 搭建 Elasticsearch 集群","text":"前司的运维水平太高了，以至于从来没有\b自己搭建过\b es 的集群和相关服务。\b今天因为业务需要自己搭建了一下，记录一下。 Elasticsearch搜索、分析和存储数据 依赖 Java 安装官方文档已经非常详细了，不再赘述~ 启动、检测CentOS 6 中，用 init 管理 1234sudo chkconfig --add elasticsearchsudo service elasticsearch startsudo service elasticsearch stop 进行测试 1curl -XGET 'localhost:9200/?pretty' 正常的话，得到类似输出 12345678910111213{ \"name\" : \"name\", \"cluster_name\" : \"cluster_name\", \"cluster_uuid\" : \"cluster_uuid\", \"version\" : { \"number\" : \"5.5.2\", \"build_hash\" : \"b2f0c09\", \"build_date\" : \"2017-08-14T12:33:14.154Z\", \"build_snapshot\" : false, \"lucene_version\" : \"6.6.0\" }, \"tagline\" : \"You Know, for Search\"} 有错误的话，在 /var/log/elasticsearch/ \b查看日志 单机测试随便玩儿的话，配置就没有必要改了，用默认的就好 配置集群这里假设，两台服务器IP为 12第一台机器: 192.168.0.1第二台机器: 192.168.0.2 配置文件\b：/etc/elasticsearch/elasticsearch.yml 1234567891011121314151617181920212223242526272829303132333435363738394041424344454647484950# ======================== Elasticsearch Configuration =========================## ---------------------------------- Cluster -----------------------------------# Use a descriptive name for your cluster:cluster.name: elasticsearch # 所有服务器保持\b一致# ------------------------------------ Node ------------------------------------# Use a descriptive name for the node:node.name: elasticsearch_node_x # 每个服务器不一样# Add custom attributes to the node:node.attr.rack: elasticsearch_node_rx # 每个服务器不一样# ----------------------------------- Paths ------------------------------------# Path to directory where to store the data (separate multiple locations by comma):# 数据和日志位置，按需更改#path.data: /path/to/data# Path to log files:#path.logs: /path/to/logs# ----------------------------------- Memory -----------------------------------## Lock the memory on startup:#bootstrap.memory_lock: true# 因为 Centos6 不支持 SecComp 所以设置为 falsebootstrap.memory_lock: falsebootstrap.system_call_filter: false## Make sure that the heap size is set to about half the memory available# on the system and that the owner of the process is allowed to use this# limit.# Elasticsearch performs poorly when the system is swapping the memory.# ---------------------------------- Network -----------------------------------## Set the bind address to a specific IP (IPv4 or IPv6):network.host: 192.168.0.1 # 第一台服务器network.host: 192.168.0.2 # 第二台服务器## Set a custom port for HTTP:http.port: 9200## --------------------------------- Discovery ----------------------------------# Pass an initial list of hosts to perform discovery when new node is started:discovery.zen.ping.unicast.hosts: [\"192.168.0.1:9300\", \"192.168.0.2:9300\"]## Prevent the \"split brain\" by configuring the majority of nodes (total number of master-eligible nodes / 2 + 1):discovery.zen.minimum_master_nodes: 2## For more information, consult the zen discovery module documentation.## ---------------------------------- Gateway -----------------------------------## Block initial recovery after a full cluster restart until N nodes are started:gateway.recover_after_nodes: 2 启动时可能遇到以下问题： max file descriptors [4096] for elasticsearch process is too low, increase to at least [65536] max number of threads [1024] for user [es] is too low, increase to at least [2048] max virtual memory areas vm.max_map_count [65530] likely too low, increase to at least [262144] 解决方案见链接 Kibana实现数据可视化 安装与运行在一台服务器安装就好，依旧是看官网文档~ 访问 http://192.168.0.1:5601 配置\b配置文件/etc/kibana/kibana.yml 1elasticsearch.url: \"http://192.168.0.1:9200\" X-PackX-Pack 是集成了多种便捷功能的单个插件 — security、alerting、monitoring、reporting、graph 探索和 machine learning 安装\b在es上安装插件 1./usr/share/elasticsearch/bin/elasticsearch-plugin install x-pack 重启es 1sudo service elasticsearch restart 在kibana上安装插件 1./usr/share/kibana/bin/kibana-plugin install x-pack 重启kibana 1sudo service kibana restart 配置安装好之后 x-pack 之后访问 es、kibana 需要用户名密码，默认的。 用户名：elastic 密码：changeme 修改密码 进入kibana，页面上进行操作 在命令行中操作 1234567curl -XPUT -u elastic 'localhost:9200/_xpack/security/user/elastic/_password' -H \"Content-Type: application/json\" -d '{ \"password\" : \"elasticpassword\"}'curl -XPUT -u elastic 'localhost:9200/_xpack/security/user/kibana/_password' -H \"Content-Type: application/json\" -d '{ \"password\" : \"kibanapassword\"}' 至此，elasticsearch，kibana就配置好了，可以开始使用了~~","link":"/2017/08/28/CentOS-6-搭建-Elasticsearch-集群/"},{"title":"GitHub 代理","text":"缘由前几天突然不能通过 ssh 的方式访问 GitHub 的项目，查询\b各种资料后，通过配置 ssh/config 终于解决，记录一下。 依赖两种代理方式其中一个 http 代理 socks5 代理 代码配置 \bGitHub SSH 代理编辑\b\b ~/.ssh/config 添加以下代码 12345678Host github.com Hostname ssh.github.com User git Port 443 # 如果是 HTTP 代理，把下面这行取消注释，并把 proxyport 改成自己的 http 代理的端口 # ProxyCommand socat - PROXY:127.0.0.1:%h:%p,proxyport=6667 # 如果是 socks5 代理，则把下面这行取消注释，并把 1086 改成自己 socks5 代理的端口 # ProxyCommand nc -v -x 127.0.0.1:1086 %h %p 配置 Git HTTP 代理1234// 走http\b代理，替换成 &quot;http://127.0.0.1:6667&quot;git config --global http.proxy &quot;socks5://127.0.0.1:1086&quot;git config --global https.proxy &quot;socks5://127.0.0.1:1086&quot; 变更可以编辑 ~/.gitconfig 参考资料 设置Git\b代理 GitHub","link":"/2017/09/05/GitHub-代理/"},{"title":"诈尸","text":"更新一下主题ICARUS","link":"/2018/11/05/update-theme/"},{"title":"vscode eslint 配置","text":"最近开始学习 React，\b配置了下 vscode 的 eslint 和\b格式化 我的 es6 格式： \b结尾\b加分号 \b2个空格缩进 \b用单引号 依赖npm eslint babel-eslint 使用\b \bcnpm 或者 npm config set registry https://registry.npm.taobao.org 可以加快 npm install 速度 vscode 插件 eslint Prettier - JavaScript formatter EditorConfig for VS Code (\b用来控制不同语言的文件的\b格式） 配置配置 eslint 解析器、规则\b在项目根目录创建 .eslintrc.json 文件 12345678910111213141516171819202122232425262728293031323334353637383940// 中文文档：http://eslint.cn/docs/rules/// 英文文档：https://eslint.org/docs/rules/{ \"parser\": \"babel-eslint\", \"env\": { \"browser\": true, \"commonjs\": true, \"es6\": true, \"node\": true }, \"parserOptions\": { \"ecmaVersion\": 6, \"sourceType\": \"module\", \"ecmaFeatures\": { \"jsx\": true, \"classes\": true, \"defaultParams\": true } }, \"rules\": { \"no-const-assign\": 1, \"no-extra-semi\": 0, \"no-fallthrough\": 0, \"no-empty\": 0, \"no-mixed-spaces-and-tabs\": 0, \"no-redeclare\": 0, \"no-this-before-super\": 1, \"no-undef\": 1, \"no-unreachable\": 1, \"no-use-before-define\": 0, \"constructor-super\": 1, \"curly\": 0, \"eqeqeq\": 0, \"func-names\": 0, \"valid-typeof\": 1, \"semi\": 1, // 结尾\b有\b分号 \"quotes\": [1, \"single\", { \"avoidEscape\": true }], // 使用单引号 \"indent\": [1, 2, { \"SwitchCase\": 1 }] // 使用2个空格缩进 }} 配置 eslint 忽略的文件有些文件不需要使用到 eslint 减少编辑器报错 \b在项目根目录创建 .eslintignore 123build/*.jsconfig/*.jsnode_modules/*.js 配置 Prettier在项目根目录创建 .prettierrc 1234// 更多配置见 https://github.com/prettier/prettier{ \"singleQuote\": true // 格式化使用单引号} 配置 EditorConfig配置不同语言文件的不同缩进格式 在 \bHOME 目录下，创建文件。vim ~/.editorconfig \b 123456789101112131415161718192021222324252627282930313233343536373839# EditorConfig is awesome: http://EditorConfig.org# top-most EditorConfig fileroot = true# Unix-style newlines with a newline ending every file[*]end_of_line = lfcharset = utf-8trim_trailing_whitespace = true# Matches multiple files with brace expansion notation# Set default charset[*.{js,py}]charset = utf-8# 4 space indentation[*.py]indent_style = spaceindent_size = 4[*.{js, html, css}]indent_style = spaceindent_size = 2[Makefile]indent_style = spaceindent_size = 4# Indentation override for all JS under lib directory[lib/**.js]indent_style = spaceindent_size = 2# Matches the exact files either package.json or .travis.yml[{package.json,.travis.yml}]indent_style = spaceindent_size = 2 配置 vscode编辑 vscode 的配置文件 \b\b保存自动\b格式化123{ \"editor.formatOnSave\": true} 在资源管理器中不显示 node_modules12345678910{ \"files.exclude\": { \"**/.git\": true, \"**/.svn\": true, \"**/.hg\": true, \"**/CVS\": true, \"**/.DS_Store\": true, \"**/node_modules\": true }}","link":"/2017/09/07/vscode-eslint-配置/"}],"tags":[{"name":"centos","slug":"centos","link":"/tags/centos/"},{"name":"Elasticsearch","slug":"Elasticsearch","link":"/tags/Elasticsearch/"},{"name":"kibana","slug":"kibana","link":"/tags/kibana/"},{"name":"GitHub","slug":"GitHub","link":"/tags/GitHub/"},{"name":"theme","slug":"theme","link":"/tags/theme/"},{"name":"vscode","slug":"vscode","link":"/tags/vscode/"},{"name":"React","slug":"React","link":"/tags/React/"}],"categories":[]}